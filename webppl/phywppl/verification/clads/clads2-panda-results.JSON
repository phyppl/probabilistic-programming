[
  {
    "label": "clads2-panda-1",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-1.wppl 12",
    "output": "-1114.617637698895\n-1114.6073112492418\n-1114.629579277174\n-1114.6219648040244\n-1114.6366768869273\n-1114.704356169805\n-1114.5155998544165\n-1114.5218732504459\n-1114.7109711987857\n-1114.7759180017633\n-1114.744333503758\n-1114.5939804718596\n"
  },
  {
    "label": "clads2-panda-2",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-2.wppl 12",
    "output": "-1067.621954746751\n-1067.6054339383631\n-1067.4997368256686\n-1067.631099597297\n-1067.5448326918981\n-1067.672694704608\n-1067.5561197551683\n-1067.6000110908383\n-1067.6291569896318\n-1067.6168588093615\n-1067.555871469872\n-1067.5299684183956\n"
  },
  {
    "label": "clads2-panda-3",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-3.wppl 12",
    "output": "-1048.3962262763441\n-1048.322130534632\n-1048.340305386789\n-1048.2753626885042\n-1048.3448334020657\n-1048.378203766516\n-1048.2214859443386\n-1048.340945497867\n-1048.2245045578325\n-1048.1065261166154\n-1048.37772545942\n-1048.2485528663094\n"
  },
  {
    "label": "clads2-panda-4",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-4.wppl 12",
    "output": "-1164.329639260036\n-1164.1000335432846\n-1164.1654974156374\n-1164.2251053239597\n-1164.1170717245789\n-1164.1626044345005\n-1164.2929629015325\n-1164.1366311917343\n-1163.9228132019102\n-1164.2988081508329\n-1164.2224494214295\n-1164.3079520731744\n"
  },
  {
    "label": "clads2-panda-5",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-5.wppl 12",
    "output": "-1120.0145367340424\n-1120.3284575934022\n-1120.2856550280467\n-1120.2920411343648\n-1120.50210434412\n-1120.301886407483\n-1120.2843983822884\n-1119.976750138406\n-1120.3228035408122\n-1120.2835602380098\n-1119.9738906172904\n-1120.001826271046\n"
  },
  {
    "label": "clads2-panda-6",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-6.wppl 12",
    "output": "-1105.2438985052304\n-1105.67640519607\n-1105.31591490569\n-1105.6851375059566\n-1105.6864671211583\n-1105.3107640602177\n-1105.681753489279\n-1105.795404981854\n-1105.4085814869359\n-1105.5022748410236\n-1105.6341800765608\n-1105.664676148587\n"
  },
  {
    "label": "clads2-panda-7",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-7.wppl 12",
    "output": "-1370.7578143354262\n-1424.6044219192693\n-1450.2622297166597\n-1413.9748009990199\n-1361.0948555411326\n-1413.4701407574312\n-1437.040280464019\n-1432.2864082126735\n-1370.519849571795\n-1429.6353799210908\n-1351.0119214569897\n-1448.922092153245\n"
  },
  {
    "label": "clads2-panda-8",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-8.wppl 12",
    "output": "-1399.9214492798571\n-1478.0027530113498\n-1464.5517681883405\n-1435.135012723227\n-1445.9512065053489\n-1427.013244221392\n-1510.528855711327\n-1430.7639833467567\n-1540.1036252018862\n-1349.6515097878194\n-1432.5904066381338\n-1390.5195480849134\n"
  },
  {
    "label": "clads2-panda-9",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-9.wppl 12",
    "output": "-1368.1903813641568\n-1493.0099855155759\n-1514.82009870363\n-1726.7307655691764\n"
  },
  {
    "label": "clads2-panda-10",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-10.wppl 12",
    "output": "-1114.705144986286\n-1114.6016568780758\n-1114.728881876347\n-1114.6322175174107\n-1114.5987130226733\n-1114.5307383745483\n-1114.5906224318237\n-1114.6445561532107\n-1114.5727572355809\n-1114.7613970669415\n-1114.668071526867\n-1114.5594590109574\n"
  },
  {
    "label": "clads2-panda-11",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-11.wppl 12",
    "output": "-1067.5794460731051\n-1067.7064324925384\n-1067.647922356928\n-1067.5863049703369\n-1067.573830731238\n-1067.5084756614515\n-1067.62898573522\n-1067.6050556386308\n-1067.7196584025905\n-1067.6526186961344\n-1067.660812278305\n-1067.5453486848135\n"
  },
  {
    "label": "clads2-panda-12",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-12.wppl 12",
    "output": "-1048.3237740415398\n-1048.3571485892378\n-1048.4649969937439\n-1048.3473462582315\n-1048.2922206121627\n-1048.3131377203804\n-1048.3525527889876\n-1048.4362656536455\n-1048.3358843202336\n-1048.3820347921974\n-1048.2861117158786\n-1048.3494132598198\n"
  },
  {
    "label": "clads2-panda-13",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-13.wppl 12",
    "output": "-1164.230547336627\n-1164.014860517157\n-1164.1821840952352\n-1164.239925063223\n-1164.0754902008232\n-1164.5935002561794\n-1164.2996035477765\n-1164.470840151221\n-1164.3552254379479\n-1164.3003927525044\n-1164.3271206657882\n-1164.4420493491666\n"
  },
  {
    "label": "clads2-panda-14",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-14.wppl 12",
    "output": "-1120.1940175329066\n-1120.3592040129079\n-1120.5408995503703\n-1120.0485065832818\n-1120.1100985166734\n-1120.2595400051537\n-1120.1987053328805\n-1120.359141380479\n-1120.3265685420893\n-1120.2282387863895\n-1120.501672023072\n-1120.2378899895068\n"
  },
  {
    "label": "clads2-panda-15",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-15.wppl 12",
    "output": "-1105.586106913932\n-1105.6326042600167\n-1105.749977480883\n-1105.6852902823268\n-1105.5864585176823\n-1105.6566785705695\n-1105.9973889738555\n-1105.49052135704\n-1105.9558462046339\n-1105.594825801941\n-1105.768668713222\n-1105.7742712571512\n"
  },
  {
    "label": "clads2-panda-16",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-16.wppl 12",
    "output": "-1360.5461996121123\n-1343.8376883003511\n-1373.9826662511787\n-1347.7720389499518\n-1431.1610754731198\n-1480.4061492211083\n-1351.9952099772565\n-1442.6180377636585\n-1356.026952292996\n-1367.0893220561825\n-1367.1554667111307\n-1361.3568382113253\n"
  },
  {
    "label": "clads2-panda-17",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-17.wppl 12",
    "output": "-1577.5782456749114\n-1449.988898590674\n-1269.480900433758\n-1505.8791654510117\n-1516.6317086777271\n-1608.1844055047648\n-1345.5976541555528\n-1445.7257885388613\n-1521.8957583427318\n-1447.45420944555\n-1428.1874515800946\n-1269.534408027699\n"
  },
  {
    "label": "clads2-panda-18",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-18.wppl 12",
    "output": "-1397.9229390759926\n-1536.5119243221689\n-1486.1558717737182\n-1420.0127002402655\n-1964.3763603208495\n-1637.070958668119\n-1592.3247724695552\n"
  },
  {
    "label": "clads2-panda-19",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-19.wppl 12",
    "output": "-1114.8186384190594\n-1114.8108337109693\n-1114.8338004702873\n-1114.8515434190542\n-1114.7991746707833\n-1114.780224794537\n-1114.7977901814645\n-1114.7006044895231\n-1114.7389674516342\n-1114.8490182856656\n-1114.727401223348\n-1114.711371409252\n"
  },
  {
    "label": "clads2-panda-20",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-20.wppl 12",
    "output": "-1067.6933270000404\n-1067.8644536848742\n-1067.6617287223814\n-1067.6755503519541\n-1067.6922409027814\n-1067.6747826801252\n-1067.641387742116\n-1067.7840783839242\n-1067.7122844840912\n-1067.7555055632492\n-1067.716170976865\n-1067.8485657830797\n"
  },
  {
    "label": "clads2-panda-21",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-21.wppl 12",
    "output": "-1048.4468840042455\n-1048.4888184639801\n-1048.4918402652495\n-1048.3580997639822\n-1048.4794952270215\n-1048.4731587825001\n-1048.456293703362\n-1048.4562195507062\n-1048.478123304609\n-1048.3949187950116\n-1048.3239447761894\n-1048.4631478882613\n"
  },
  {
    "label": "clads2-panda-22",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-22.wppl 12",
    "output": "-1164.7961139927088\n-1164.7830028698845\n-1164.8216526241201\n-1164.984674704109\n-1164.8485943865107\n-1165.0164206406146\n-1165.1491909822355\n-1164.7997928413706\n-1164.9380721647638\n-1164.6505813944366\n-1164.891131481356\n-1164.9998467240061\n"
  },
  {
    "label": "clads2-panda-23",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-23.wppl 12",
    "output": "-1120.9722590481108\n-1120.771917257118\n-1120.703407055134\n-1120.7669280566026\n-1120.8230485335148\n-1120.7203989125726\n-1120.8697243197682\n-1120.477807234227\n-1120.6129907478785\n-1120.5598225462961\n-1120.8097316940036\n-1120.764368096475\n"
  },
  {
    "label": "clads2-panda-24",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-24.wppl 12",
    "output": "-1106.2845909141226\n-1106.2152393369765\n-1106.2351555667942\n-1106.410406560156\n-1106.1373467334686\n-1106.1591637777688\n-1106.2399845024509\n-1106.1801971667123\n-1106.2479622815015\n-1106.1039852381407\n-1106.4596946125012\n-1106.0529136458533\n"
  },
  {
    "label": "clads2-panda-25",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-25.wppl 12",
    "output": "-1359.125223711703\n-1297.4282617868687\n-1368.9199768558303\n-1437.601789814512\n-1435.840188087501\n-1442.0088952290023\n-1361.596591537917\n-1295.823758327178\n-1443.3919164829385\n-1423.341605910043\n-1443.211824290733\n-1438.46550854531\n"
  },
  {
    "label": "clads2-panda-26",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-26.wppl 12",
    "output": "-1414.6119993175435\n-1358.3062857082355\n-1502.2282233170606\n-1352.9211954763002\n-1336.3350102166014\n-1540.9235313621366\n-1273.1965118612611\n-1348.6674842473976\n-1424.2928594833709\n-1271.381713378811\n-1423.1600399117133\n-1335.6080853003969\n"
  },
  {
    "label": "clads2-panda-27",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-27.wppl 12",
    "output": "-1291.3629582058275\n-1632.755199294743\n-1390.0668511062602\n-1375.3113961346066\n-1287.369595874829\n-1565.0623278007122\n-1489.357305411056\n-1493.8579504412005\n-1352.6380084140546\n-1577.3284288724265\n-1290.5139482050033\n-1533.3651796588358\n"
  },
  {
    "label": "clads2-panda-28",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-28.wppl 12",
    "output": "-213.26436459461016\n-213.33791728004056\n-213.41556875613782\n-213.53010972535506\n-213.41105162497126\n-213.05945767672165\n-213.46604296979655\n-213.4977943610513\n-213.25122320604697\n-213.34512975703714\n-213.51433778154984\n-213.49165336646104\n"
  },
  {
    "label": "clads2-panda-29",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-29.wppl 12",
    "output": "-166.5549132309613\n-166.40338371639743\n-166.4724637918064\n-166.46951576446264\n-166.5382317653697\n-166.45303148249707\n-166.4745022292589\n-166.3619299935054\n-166.43541858786256\n-166.3953450597632\n-166.50671756042644\n-166.53564128795114\n"
  },
  {
    "label": "clads2-panda-30",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-30.wppl 12",
    "output": "-147.25403180387218\n-147.27993983652973\n-147.1410293267481\n-147.2403581658583\n-147.1462370200579\n-147.0653747890591\n-147.20345947544777\n-147.13676434364265\n-147.2372327826352\n-147.11171759223683\n-147.1416851065358\n-147.34549716929274\n"
  },
  {
    "label": "clads2-panda-31",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-31.wppl 12",
    "output": "-262.7940976567895\n-261.9931763213557\n-262.8748962146102\n-262.9966694761406\n-262.4328999037116\n-263.21099720667075\n-262.7658264013553\n-262.87958330376534\n-262.6639845726494\n-261.9535420863391\n-262.72365627913746\n-262.0244986437874\n"
  },
  {
    "label": "clads2-panda-32",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-32.wppl 12",
    "output": "-219.26000459358306\n-219.02709613842325\n-218.96259048665476\n-219.15984944936397\n-217.2758885138771\n-219.26351986368294\n-219.1840580161249\n-219.33504864994848\n-218.9080712749061\n-219.20685008209344\n-219.3025276839686\n-219.12979906923294\n"
  },
  {
    "label": "clads2-panda-33",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-33.wppl 12",
    "output": "-204.6195518113322\n-204.20097421695021\n-204.42163905381634\n-204.50748017225814\n-204.66116827463188\n-204.19182284380693\n-204.38664278756727\n-204.3566004856562\n-204.38178966618753\n-204.36478468997547\n-204.44356575437004\n-204.62381938631978\n"
  },
  {
    "label": "clads2-panda-34",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-34.wppl 12",
    "output": "-411.48014483884333\n-423.8083298792751\n-403.1673653163732\n-415.9312457928455\n-389.7620203362428\n-402.24997130149916\n-406.36170238689476\n-397.6498268791182\n-409.0051360696418\n-404.5712716761825\n-387.9398263746357\n-391.462272143841\n"
  },
  {
    "label": "clads2-panda-35",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-35.wppl 12",
    "output": "-414.95312422083657\n-485.793928621884\n-378.7438019620379\n-442.59190993814\n-474.3628093081612\n-456.42412552711426\n-402.3660979508527\n-437.8513959447582\n-394.07901264580573\n-394.2181604623677\n-401.9500573537582\n-398.32100835072583\n"
  },
  {
    "label": "clads2-panda-36",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-36.wppl 12",
    "output": ""
  },
  {
    "label": "clads2-panda-37",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-37.wppl 12",
    "output": "-213.22996934025787\n-213.52381414163764\n-213.50030753151745\n-212.8184058860374\n-213.1819123898102\n-212.95389156746694\n-212.85898106129878\n-213.39568526914587\n-213.4519162105314\n-213.58049285943932\n-213.5648009214967\n-213.65053688169237\n"
  },
  {
    "label": "clads2-panda-38",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-38.wppl 12",
    "output": "-166.48139046218273\n-166.48882290347404\n-166.59634062759457\n-166.4671873907653\n-166.41427519442684\n-166.33406631647418\n-166.4866462143217\n-166.50831529423766\n-166.43347888204\n-166.57101184088484\n-166.39217678476865\n-166.44789222602685\n"
  },
  {
    "label": "clads2-panda-39",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-39.wppl 12",
    "output": "-147.30324594581526\n-147.26139924115566\n-147.35320054146848\n-147.1836300905953\n-147.35807772245522\n-147.2092118075689\n-147.2607618977047\n-147.34185763459942\n-147.32505805813616\n-147.1387145621638\n-147.27499117254655\n-147.25224514405656\n"
  },
  {
    "label": "clads2-panda-40",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-40.wppl 12",
    "output": "-263.00991640017105\n-262.3442932016396\n-262.8108484813805\n-262.5192210720546\n-263.09240563493245\n-262.61270920046\n-262.9722997980057\n-262.67589778398303\n-262.7004584499913\n-262.83374860720403\n-263.27261591267836\n-262.79746466725567\n"
  },
  {
    "label": "clads2-panda-41",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-41.wppl 12",
    "output": "-219.1654930449618\n-219.191869793176\n-219.1434246942074\n-219.40179090394656\n-219.3050146036986\n-219.3405593932953\n-217.94433752110345\n-219.40128632805352\n-219.30199102512958\n-218.8819951289078\n-219.43235284931387\n-218.79782752595787\n"
  },
  {
    "label": "clads2-panda-42",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-42.wppl 12",
    "output": "-204.47525152631985\n-204.5301862455306\n-204.418362085496\n-204.784256980103\n-204.39999246375444\n-204.6504065412636\n-204.6242798539189\n-204.7511018498872\n-204.6895192650634\n-204.5791342474608\n-204.478757865585\n-204.72116148076847\n"
  },
  {
    "label": "clads2-panda-43",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-43.wppl 12",
    "output": "-407.2908629828386\n-390.60795547163957\n-405.5145377479947\n-406.6296361413349\n-428.89461819777216\n-420.13079556527725\n-425.81940909509024\n-410.43576292675584\n-425.17956461717097\n-417.63887143820966\n-410.6770293476683\n-392.98495962550555\n"
  },
  {
    "label": "clads2-panda-44",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-44.wppl 12",
    "output": "-416.6648387996356\n-386.3623014938796\n-401.88837738329505\n-433.24968145027526\n-440.34733622711224\n-399.0410376033112\n-428.3230238769978\n-393.74079812871616\n-549.6982844980778\n-406.93968426307197\n-395.5050952554228\n-379.42480405057495\n"
  },
  {
    "label": "clads2-panda-45",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-45.wppl 12",
    "output": ""
  },
  {
    "label": "clads2-panda-46",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-46.wppl 12",
    "output": "-213.65480243696481\n-213.71742709275216\n-213.58873971768097\n-213.59376205080505\n-213.66356829657866\n-213.6240266326109\n-213.55863363354547\n-213.399111868293\n-212.55563556160945\n-213.69986556740108\n-213.4725660118645\n-213.55994807610776\n"
  },
  {
    "label": "clads2-panda-47",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-47.wppl 12",
    "output": "-166.64157759114147\n-166.5571448082187\n-166.68308154077206\n-166.5436343989588\n-166.71445914249307\n-166.63358320190721\n-166.7012216472151\n-165.7571171091629\n-166.64258102279396\n-166.55136797359253\n-166.62746845121922\n-166.68966521652598\n"
  },
  {
    "label": "clads2-panda-48",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-48.wppl 12",
    "output": "-147.33538639414172\n-147.43810776043364\n-147.390398787836\n-147.4058470880341\n-147.32626231919744\n-147.314458314009\n-147.36507659919388\n-147.3273015875396\n-147.5648737398191\n-147.4670968596001\n-147.30735881715628\n-147.35351825150326\n"
  },
  {
    "label": "clads2-panda-49",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-49.wppl 12",
    "output": "-262.9273532119238\n-263.55007632564946\n-262.27565336318185\n-263.35703292524136\n-263.34695891343915\n-262.69605648771994\n-262.6365654388587\n-262.65440772693233\n-263.8248765991133\n-263.12585732238904\n-262.68159919592665\n-263.72322786705956\n"
  },
  {
    "label": "clads2-panda-50",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-50.wppl 12",
    "output": "-220.01515991195126\n-219.65766497887844\n-219.726130402338\n-220.1032806175282\n-219.99861171952816\n-219.9121761983267\n-219.4489932863767\n-220.16559562988795\n-220.00617869264536\n-219.55133367411543\n-219.66855699217072\n-219.27940008250798\n"
  },
  {
    "label": "clads2-panda-51",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-51.wppl 12",
    "output": "-205.03337489854778\n-205.08925949343543\n-204.85842810627238\n-205.0146381414666\n-204.66368205095105\n-205.1665797520593\n-205.129772360585\n-205.1332769167579\n-205.2817141315945\n-205.1869486958408\n-205.07326942868443\n-204.90336244803294\n"
  },
  {
    "label": "clads2-panda-52",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-52.wppl 12",
    "output": "-410.4347187194643\n-402.1272740230313\n-413.841619955287\n-407.09428044642823\n-392.406702382121\n-392.86708555175994\n-413.41906302123584\n-404.2041489898961\n-393.34404171773747\n-425.73138577674274\n-424.54849897328427\n-425.9985429787994\n"
  },
  {
    "label": "clads2-panda-53",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-53.wppl 12",
    "output": "-411.951863518188\n-410.4007626294007\n-379.1041719595869\n-427.8574898210886\n-398.0870179752276\n-404.45344963106857\n-442.21730342024205\n-405.9483701517894\n-379.115871159378\n-378.77272498767354\n-435.23952433766976\n-444.07720160040844\n"
  },
  {
    "label": "clads2-panda-54",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-54.wppl 12",
    "output": "-392.5043819186668\n-444.98685815608917\n-413.40025374501295\n-411.7925691842497\n-419.5656981153761\n-497.9701139050213\n-411.7349771682964\n"
  },
  {
    "label": "clads2-panda-55",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-55.wppl 12",
    "output": "44.600483469443354\n44.53826007560187\n44.725071885447534\n44.6531634544933\n44.49208311879921\n44.60715550541421\n44.5528924554342\n44.57147327240458\n44.583944048689624\n44.65422410844688\n44.6247563323651\n44.62550484123979\n"
  },
  {
    "label": "clads2-panda-56",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-56.wppl 12",
    "output": "90.44759012610535\n90.34383090750916\n90.4070440859085\n90.40483142377158\n90.40646474392719\n90.53318056824472\n90.37678258661974\n90.44137908490534\n90.50085322281323\n90.31364677535781\n90.44587462007908\n90.4691321398821\n"
  },
  {
    "label": "clads2-panda-57",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-57.wppl 12",
    "output": "108.44140715728379\n108.4835523656679\n108.43221865540968\n108.47432956135313\n108.4275488991751\n108.47562845309129\n108.48180687009108\n108.54305762445037\n108.3823614089707\n108.52658174454517\n108.4462472989189\n108.40263029695252\n"
  },
  {
    "label": "clads2-panda-58",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-58.wppl 12",
    "output": "2.446680312089752\n2.0929149161425755\n2.194693175441934\n2.2960826652305286\n2.321903659862251\n2.472702292541543\n2.4213046010846657\n2.4578616479041706\n2.3313725006936927\n2.2283263144921683\n2.3376293503537493\n2.498876623952441\n"
  },
  {
    "label": "clads2-panda-59",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-59.wppl 12",
    "output": "40.216644193419356\n40.132573395312924\n39.85013194614661\n39.77199147460139\n39.77737406150164\n39.89216385032413\n39.689233626268404\n39.86796133984557\n40.02088817473225\n40.00057425655154\n39.90039440652996\n40.0044476542508\n"
  },
  {
    "label": "clads2-panda-60",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-60.wppl 12",
    "output": "51.49182264123818\n51.10127411244592\n51.18559125410299\n51.30616743253876\n51.19203005608254\n51.21240405727889\n51.13441190836794\n51.35398550155087\n51.14708701216571\n51.20484041296778\n51.32599882134498\n51.352912090970406\n"
  },
  {
    "label": "clads2-panda-61",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-61.wppl 12",
    "output": "-130.40226963526698\n-135.1401175794268\n-128.37714111227524\n-130.07749239507012\n-131.35676124251026\n-129.66194459958177\n-127.74922528685998\n-133.27752524679354\n-132.44447851037367\n"
  },
  {
    "label": "clads2-panda-62",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-62.wppl 12",
    "output": "-135.5838227793505\n-137.47395813704247\n"
  },
  {
    "label": "clads2-panda-63",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-63.wppl 12",
    "output": ""
  },
  {
    "label": "clads2-panda-64",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-64.wppl 12",
    "output": "44.56328897724029\n44.555210851685956\n44.49237946419133\n44.66945717211601\n44.685396435093956\n44.6820072292691\n44.793183403874146\n44.51381869261752\n44.56680010174205\n44.645611102059625\n44.71482357567444\n44.47440712019412\n"
  },
  {
    "label": "clads2-panda-65",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-65.wppl 12",
    "output": "90.40033969162475\n90.40098172218975\n90.31099447522283\n90.4236661484001\n90.33853715343409\n90.40921943198802\n90.45663673808231\n90.43858217789325\n90.34927233349623\n90.36061014838222\n90.42943095805869\n90.4281993718696\n"
  },
  {
    "label": "clads2-panda-66",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-66.wppl 12",
    "output": "108.50421621115206\n108.57691771790167\n108.46220455999128\n108.35911663198723\n108.43718772121412\n108.46437151083087\n108.46837089005307\n108.59982946173481\n108.6059363451879\n108.46153766860243\n108.49801425637109\n108.45434319623465\n"
  },
  {
    "label": "clads2-panda-67",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-67.wppl 12",
    "output": "2.2946627858189803\n2.3317268387263663\n2.130408862822817\n2.057661259134731\n2.005250864143381\n2.353567669581766\n2.39923660095773\n2.3000173080437936\n2.042698767125829\n2.25273514856028\n2.1376088842251413\n2.159251755674589\n"
  },
  {
    "label": "clads2-panda-68",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-68.wppl 12",
    "output": "39.776616474806865\n40.03193654915719\n39.85866792626596\n39.81827033873029\n39.80205959282387\n39.65045999202391\n39.9071365924741\n39.86656860801239\n39.938736533884686\n39.448557599269684\n39.81475733107919\n39.87597455607629\n"
  },
  {
    "label": "clads2-panda-69",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-69.wppl 12",
    "output": "50.9175200376066\n51.22660959881759\n51.248507717248835\n51.426990499471934\n51.51305617914693\n51.225128660396805\n51.09941721373789\n50.99502573204127\n51.36981451670829\n51.39274067702466\n51.09335011182871\n51.46060354059273\n"
  },
  {
    "label": "clads2-panda-70",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-70.wppl 12",
    "output": "-135.676081396151\n-134.7102254921593\n-128.793573200363\n-130.45589726688638\n-127.92555605289284\n-127.85654287586944\n-126.03869288712457\n-128.75222404179155\n-130.19975673790555\n-130.02295416370146\n-131.50902967927527\n"
  },
  {
    "label": "clads2-panda-71",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-71.wppl 12",
    "output": "-130.55122916677144\n"
  },
  {
    "label": "clads2-panda-72",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-72.wppl 12",
    "output": "-136.1332736861751\n"
  },
  {
    "label": "clads2-panda-73",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-73.wppl 12",
    "output": "44.339349742236884\n44.59515011406572\n44.501571254464096\n44.47624976893718\n44.49659422132134\n44.46350813779897\n44.53301855066649\n44.44067807135829\n44.449778579263054\n44.39124861820738\n44.51331193878974\n44.489669766035846\n"
  },
  {
    "label": "clads2-panda-74",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-74.wppl 12",
    "output": "90.34468313960062\n90.23940332644136\n90.15584810282482\n90.34561134271827\n90.25619211049074\n90.29677655462707\n90.28557085415476\n90.31843640913517\n90.16422966828317\n90.2564902096638\n90.33127768856114\n90.36186316799328\n"
  },
  {
    "label": "clads2-panda-75",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-75.wppl 12",
    "output": "108.31004132840529\n108.29308143483921\n108.31217588258649\n108.34137935038609\n108.47607068457677\n108.25651108016592\n108.27770198810485\n108.31350405890115\n108.34629467750183\n108.28927413609182\n108.29612900809158\n108.35268344993693\n"
  },
  {
    "label": "clads2-panda-76",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-76.wppl 12",
    "output": "1.5126754896987116\n1.8743295547393028\n1.710611729225798\n1.6371097625313595\n2.0753323128033205\n1.7823735843746533\n2.011713532711749\n2.0543132423698474\n1.7351680997198748\n1.4229968103646868\n1.5779433061129478\n1.8121662371378129\n"
  },
  {
    "label": "clads2-panda-77",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-77.wppl 12",
    "output": "39.35603134314281\n39.612259671737505\n39.65646146040307\n39.583595214895745\n39.482455000106185\n39.46129433191463\n39.4023773496241\n39.31965936792602\n39.320040742980055\n39.207795838871114\n39.89003095805207\n39.527380671764355\n"
  },
  {
    "label": "clads2-panda-78",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-78.wppl 12",
    "output": "51.078910528621186\n50.92920406054697\n50.7963193519696\n51.04161720520963\n50.987954354495976\n50.980524376716225\n50.96169126411732\n51.107763472061606\n51.19769931882374\n51.01015768525338\n51.043309999363586\n51.00037861757544\n"
  },
  {
    "label": "clads2-panda-79",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-79.wppl 12",
    "output": "-124.85069599576664\n-131.2181808941546\n-129.5451788501851\n-125.84810467405856\n-126.7049897787788\n-129.15584938933313\n-127.50187331298035\n-126.99393983651197\n-125.66903216524459\n-130.2459684047966\n-123.9175844116616\n-129.7218481770194\n"
  },
  {
    "label": "clads2-panda-80",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-80.wppl 12",
    "output": "-133.82511560555693\n-134.65596408169628\n"
  },
  {
    "label": "clads2-panda-81",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.15,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.15\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-81.wppl 12",
    "output": ""
  },
  {
    "label": "clads2-panda-82",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-82.wppl 12",
    "output": "-114.36297824286962\n-114.54434901583247\n-114.99826481871378\n-114.58373543100717\n-114.54874149677025\n-114.57811135290466\n-114.7312711226453\n-114.81612854283358\n-114.37836483281977\n-114.6496652353987\n-114.49750334927974\n-114.4190639355783\n"
  },
  {
    "label": "clads2-panda-83",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-83.wppl 12",
    "output": "-68.31991736873371\n-68.13701554741974\n-68.1837563637022\n-68.39465264852481\n-68.27722384151011\n-68.20533284441179\n-68.36767577404265\n-68.15189098514762\n-68.16106663838703\n-68.30438043792812\n-67.92893609304997\n-68.19756956663537\n"
  },
  {
    "label": "clads2-panda-84",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-84.wppl 12",
    "output": "-49.73963660028195\n-49.84260565072019\n-49.80253241677008\n-49.94618827881543\n-49.785680874902845\n-49.78816471100174\n-49.800408109777415\n-49.78052772343481\n-49.910158780083286\n-49.827314496726935\n-49.737194938821986\n-49.71832301747257\n"
  },
  {
    "label": "clads2-panda-85",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-85.wppl 12",
    "output": "-159.60988778340462\n-159.4351525643249\n-159.21907591729556\n-160.02091291190678\n-160.6267056897958\n-160.25724930823378\n-160.1876145587561\n-159.8376919024644\n-159.65117569779983\n-159.48040596087947\n-160.3254978203396\n-159.75922498435392\n"
  },
  {
    "label": "clads2-panda-86",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-86.wppl 12",
    "output": "-118.81746277873344\n-118.77279159773967\n-118.63484892516597\n-118.49395207158378\n-119.24967649551856\n-119.0664052299818\n-118.85996898855144\n-118.83865547960436\n-118.89188692624933\n-119.08518056043562\n-118.5326950005972\n-118.73562688419445\n"
  },
  {
    "label": "clads2-panda-87",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-87.wppl 12",
    "output": "-107.11865296911341\n-107.27788713094523\n-107.1349410970951\n-106.83870303337018\n-107.05295424463532\n-106.97019538851248\n-107.11089320933397\n-107.02528313452045\n-106.97759099529175\n-107.1610520561169\n-107.20963867188281\n-107.22213283932051\n"
  },
  {
    "label": "clads2-panda-88",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-88.wppl 12",
    "output": "-266.3179029549634\n-266.50876636101475\n-265.77198560189095\n-270.54115061677203\n-269.799631722316\n-265.80317176351616\n-271.277079763915\n-267.3504086077618\n-269.16727152276803\n-267.90637025354056\n-265.3901310606533\n-267.34078566016035\n"
  },
  {
    "label": "clads2-panda-89",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-89.wppl 12",
    "output": "-267.3895892635536\n-272.25350309910596\n-273.82210330481576\n-270.23352178470293\n-271.438550397149\n-271.62551804545853\n-273.03996129816767\n-263.6472732552995\n-270.2632615163327\n-264.305927677529\n-268.71308955588063\n-266.00759212643914\n"
  },
  {
    "label": "clads2-panda-90",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-90.wppl 12",
    "output": "-315.5415079821985\n-302.045177025689\n-291.91780212051924\n-306.40471632469735\n"
  },
  {
    "label": "clads2-panda-91",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-91.wppl 12",
    "output": "-114.5526297162519\n-114.64371432561425\n-114.15244487894095\n-114.42240883711408\n-114.52734429578327\n-114.56360753961643\n-114.41118894569236\n-114.48583895169632\n-114.57946203057178\n-114.8634051736288\n-114.4303312436439\n-114.22419278375193\n"
  },
  {
    "label": "clads2-panda-92",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-92.wppl 12",
    "output": "-68.17323816562529\n-68.25312643969679\n-68.2337396326901\n-68.19749940518244\n-68.24053125434868\n-68.2655932243926\n-67.91931424366646\n-68.42888092038766\n-68.12322214264526\n-68.29779301742258\n-68.37927486457359\n-68.14408064287508\n"
  },
  {
    "label": "clads2-panda-93",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-93.wppl 12",
    "output": "-49.833917730558056\n-49.790154254027954\n-49.84941076711572\n-49.87493638546642\n-49.90648506976697\n-49.75502387949535\n-49.762111943295345\n-49.769139801384284\n-49.78876205824112\n-49.724390737016066\n-49.75860954678923\n-49.813802917212115\n"
  },
  {
    "label": "clads2-panda-94",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-94.wppl 12",
    "output": "-160.34445962220397\n-160.5826188340135\n-160.20257703707\n-159.70010414268882\n-160.37112517395886\n-159.8270411331534\n-160.41529177146154\n-160.03010933332826\n-158.73917699532527\n-159.7888852454866\n-160.27038060311668\n-160.2640464044059\n"
  },
  {
    "label": "clads2-panda-95",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-95.wppl 12",
    "output": "-119.33101041584234\n-119.4650453569232\n-119.38683913045148\n-118.96153708603181\n-119.00530107379407\n-119.09029929428455\n-118.7593843843567\n-119.30145566979972\n-119.3327085188281\n-119.61092907213552\n-118.86043552949808\n-118.8771440172836\n"
  },
  {
    "label": "clads2-panda-96",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-96.wppl 12",
    "output": "-107.24554334105208\n-107.42144813227743\n-107.1655303046444\n-107.32380375953711\n-107.1727315910707\n-107.19245437381126\n-107.06999435905847\n-106.97896561202826\n-107.13194736753154\n-107.22154870321971\n-107.025132555208\n-107.42399712633919\n"
  },
  {
    "label": "clads2-panda-97",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-97.wppl 12",
    "output": "-269.2618450889331\n-272.40754902854064\n-271.616272549777\n-265.5158480569846\n-271.3967419165997\n-271.9995418935081\n-268.6803568334475\n-270.37109910184176\n-276.0652434089948\n-267.66212217211785\n-271.82344952497624\n-272.28268854847454\n"
  },
  {
    "label": "clads2-panda-98",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-98.wppl 12",
    "output": "-268.46884994433776\n-270.1317685825595\n-272.35328352599265\n-265.5568137330515\n-267.4966363558384\n-265.3816045669721\n-267.60464890280105\n-269.0514290687287\n-267.31538996010136\n-266.49022767000815\n-269.9295959779821\n-269.32270871908554\n"
  },
  {
    "label": "clads2-panda-99",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-99.wppl 12",
    "output": "-317.5117039983908\n-304.925870861971\n-307.33586066309897\n-308.94443522229255\n-301.9808230248374\n-299.33257813424734\n-315.2710220613867\n-330.1894730876396\n"
  },
  {
    "label": "clads2-panda-100",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-100.wppl 12",
    "output": "-114.68241672975068\n-114.63014882530652\n-114.94075941670762\n-114.58749724459099\n-114.76372280737681\n-114.39683304376058\n-114.70039355734814\n-115.08059532189505\n-114.77243648857707\n-114.68182760168408\n-114.68546106114584\n-114.8908679272761\n"
  },
  {
    "label": "clads2-panda-101",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-101.wppl 12",
    "output": "-68.40240682877088\n-68.31973881012667\n-68.19963334739802\n-68.33135165967818\n-68.42446977021187\n-68.58038177765889\n-68.17338451592411\n-68.29331725219558\n-68.2032380303855\n-68.2930867353422\n-68.45548190987199\n-68.11554785036203\n"
  },
  {
    "label": "clads2-panda-102",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-102.wppl 12",
    "output": "-49.902071946304176\n-49.945747098499474\n-49.835755549158016\n-49.80568213822743\n-49.96078165784894\n-49.93564813808378\n-49.92803649820375\n-49.9665484004147\n-49.95352376204703\n-49.91621524525988\n-49.98886783394623\n-49.961356374309034\n"
  },
  {
    "label": "clads2-panda-103",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-103.wppl 12",
    "output": "-160.34580210893662\n-160.71423994326548\n-160.6653466822093\n-161.03026135407362\n-160.50027077117971\n-161.10259986518284\n-160.28397398219943\n-160.8075201492157\n-160.870076592886\n-160.78954047798575\n-160.55932510672156\n-160.97932032986245\n"
  },
  {
    "label": "clads2-panda-104",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-104.wppl 12",
    "output": "-119.82722276997742\n-119.31880711698905\n-119.20787681379178\n-119.09187140072277\n-119.44842665600933\n-119.69766021785006\n-119.53215401524697\n-119.99699367365422\n-119.9610059862041\n-119.59370116915483\n-119.48917559559835\n-119.32572457771795\n"
  },
  {
    "label": "clads2-panda-105",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-105.wppl 12",
    "output": "-107.64831546242866\n-107.32086812606174\n-107.78767542945342\n-107.32433827428497\n-107.63492218485882\n-107.74333069348941\n-107.61538901506306\n-107.6503870440714\n-107.2343179144236\n-107.60374603865542\n-107.18119889330804\n-107.45242365646895\n"
  },
  {
    "label": "clads2-panda-106",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-106.wppl 12",
    "output": "-275.3196164142496\n-271.0077168049562\n-273.82226404105484\n-273.80092253000566\n-273.77932632134014\n-273.39935117518803\n-271.4129315168142\n-273.87570286874313\n-275.454720152558\n-278.3527850370526\n-276.3839991593876\n-276.52457053715955\n"
  },
  {
    "label": "clads2-panda-107",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-107.wppl 12",
    "output": "-271.7108522664138\n-270.43974008998975\n-270.42204486803587\n-266.07192648399564\n-264.26649462525916\n-276.20236588611283\n-269.7328182197293\n-267.6013895872193\n-268.91870488487905\n-279.05329120502654\n-276.09260981856573\n-276.29522065959566\n"
  },
  {
    "label": "clads2-panda-108",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-108.wppl 12",
    "output": "-311.31302344598134\n-299.71071704316194\n-296.56520835767867\n-290.67522208054424\n-294.04747304753505\n-297.32473011757634\n-305.4185938059094\n-288.2840226639107\n-295.63961406851\n-299.6500419953459\n-299.60112969833654\n-295.81722456551427\n"
  },
  {
    "label": "clads2-panda-109",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-109.wppl 12",
    "output": "-57.426807277158744\n-57.3275324670718\n-57.25547720040885\n-57.345754371505826\n-57.264896782275436\n-57.286245701406116\n-57.31542788792763\n-57.40377469329479\n-57.30961424720491\n-57.327717560439474\n-57.193308016640216\n-57.19907788287901\n"
  },
  {
    "label": "clads2-panda-110",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-110.wppl 12",
    "output": "-11.407437009761601\n-11.456856601881242\n-11.536436797254746\n-11.518831505068459\n-11.480414710893125\n-11.412708564019427\n-11.356653971570047\n-11.468565674847085\n-11.378437382656427\n-11.45125265712349\n-11.388735869959888\n-11.403952685570394\n"
  },
  {
    "label": "clads2-panda-111",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-111.wppl 12",
    "output": "6.489893856826345\n6.656920941904634\n6.503897017933493\n6.595693640442615\n6.576269618005549\n6.597568658016005\n6.531725578569565\n6.7025682031590605\n6.535297977259535\n6.665215793006668\n6.617842190787776\n6.529614417885757\n"
  },
  {
    "label": "clads2-panda-112",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-112.wppl 12",
    "output": "-100.09136222364029\n-99.57238634663156\n-99.40338632912018\n-98.86425584091371\n-99.65675588856875\n-99.72185310021476\n-99.68208737479517\n-99.5986452266421\n-99.68485825479671\n-99.88205868340881\n-99.29385382648906\n-99.46866037021304\n"
  },
  {
    "label": "clads2-panda-113",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-113.wppl 12",
    "output": "-61.38665835273943\n-61.33038947179372\n-61.42258081031474\n-61.59755354520675\n-61.31091584270147\n-61.665936753355254\n-61.629439206700425\n-61.25259230259599\n-61.155571103091994\n-61.475933715319826\n-61.354492743713756\n-61.47968855599959\n"
  },
  {
    "label": "clads2-panda-114",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-114.wppl 12",
    "output": "-50.69205411803129\n-50.732892610884164\n-50.57170315333091\n-50.80004457368638\n-50.431145903511535\n-50.654655401473455\n-50.706626994908135\n-50.55202778334024\n-50.863500982700444\n-50.82621037788162\n-50.65377297155443\n-50.538593360718714\n"
  },
  {
    "label": "clads2-panda-115",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-115.wppl 12",
    "output": "-198.57240028799893\n-196.4609853447412\n-199.51215192119375\n-199.2962731742941\n-198.5168787801538\n-195.40362607073857\n-197.2224896603434\n-194.72007324878305\n-198.52620076655725\n-194.73604923405225\n-199.2636069660789\n-197.70977843370574\n"
  },
  {
    "label": "clads2-panda-116",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-116.wppl 12",
    "output": "-220.11221960805346\n-215.00114795804964\n-229.48476989392697\n-215.38898609836866\n-224.87675816577104\n-216.3465680506355\n-220.56023894679578\n-216.80449801265397\n-214.77339838833385\n-217.90256242705544\n-216.52864653399388\n-214.17772601434112\n"
  },
  {
    "label": "clads2-panda-117",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-117.wppl 12",
    "output": ""
  },
  {
    "label": "clads2-panda-118",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-118.wppl 12",
    "output": "-57.31649454199972\n-57.262040597028225\n-57.27463215550944\n-57.38520867363327\n-57.34017656421991\n-57.11560805676716\n-57.316797297626536\n-57.143934838410026\n-57.25749173629728\n-57.358247447855824\n-57.45187522495673\n-57.27385406984439\n"
  },
  {
    "label": "clads2-panda-119",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-119.wppl 12",
    "output": "-11.526757765812267\n-11.47575833682946\n-11.512645481310678\n-11.440872468482624\n-11.472011310079267\n-11.497262311913143\n-11.337518913453463\n-11.45996040573936\n-11.395918790385569\n-11.46369264188661\n-11.523919984410128\n-11.322936906996961\n"
  },
  {
    "label": "clads2-panda-120",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-120.wppl 12",
    "output": "6.447120065033605\n6.54589507482328\n6.494477821396433\n6.458175271525111\n6.540342108727199\n6.4686284052556235\n6.5389578948276075\n6.537719040501582\n6.549618404794263\n6.558724826298171\n6.526111171089276\n6.52165589219312\n"
  },
  {
    "label": "clads2-panda-121",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-121.wppl 12",
    "output": "-99.70817226999061\n-99.14541883941823\n-99.94676599190998\n-99.78351304616689\n-99.58092887000151\n-99.55348473516061\n-100.00696002860181\n-99.65677206915103\n-99.59052745154708\n-99.84005719679374\n-99.73449868158262\n-99.78657279332887\n"
  },
  {
    "label": "clads2-panda-122",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-122.wppl 12",
    "output": "-61.47788524018651\n-61.525769067768664\n-61.70401698980973\n-61.6277544774314\n-61.74124117724389\n-61.81853549465986\n-61.73656528743305\n-61.89246904380252\n-61.65098094459983\n-61.486606015468425\n-61.851398038495965\n-61.494956556884496\n"
  },
  {
    "label": "clads2-panda-123",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-123.wppl 12",
    "output": "-50.986349928469814\n-50.672381600160314\n-50.66754703548244\n-50.646956902682795\n-50.76371732197205\n-50.87859036972506\n-50.81289678512633\n-50.69588851424856\n-50.75828238902529\n-50.60938732381058\n-50.69939966808522\n-50.72288928294338\n"
  },
  {
    "label": "clads2-panda-124",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-124.wppl 12",
    "output": "-197.93702925363093\n-198.20331223002793\n-198.1315360618518\n-194.00830031525584\n-199.53098116662144\n-198.02524337143169\n-198.7086868481789\n-196.89622537411117\n-197.56774309271384\n-195.4022651085696\n-195.2363471461328\n-198.19957130153554\n"
  },
  {
    "label": "clads2-panda-125",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-125.wppl 12",
    "output": "-215.35430496131383\n-218.3654031127524\n-213.9568966969514\n-219.26884377110474\n-213.4763675120702\n-216.63504105849935\n-213.90219338085925\n-210.61525034710718\n-214.14227760594076\n-217.51562975929025\n-223.098599021988\n-213.82779632089478\n"
  },
  {
    "label": "clads2-panda-126",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-126.wppl 12",
    "output": "-250.24898022522913\n-236.42025044463767\n-240.4805013040492\n-239.64062402769318\n-248.96157760983888\n"
  },
  {
    "label": "clads2-panda-127",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-127.wppl 12",
    "output": "-57.33145653217114\n-57.58533800257656\n-57.50427773203236\n-57.33097001559694\n-57.53773882197932\n-57.46914051366171\n-57.53286908282281\n-57.53392390245298\n-57.50767499022089\n-57.292279880904005\n-57.41493621201557\n-57.38665846731016\n"
  },
  {
    "label": "clads2-panda-128",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-128.wppl 12",
    "output": "-11.522574013117339\n-11.54086654304442\n-11.700704019095486\n-11.615240184980301\n-11.727197261136508\n-11.481407953358968\n-11.693393918192726\n-11.509164636079218\n-11.603456743621372\n-11.62779294121381\n-11.564483993574862\n-11.586832778611537\n"
  },
  {
    "label": "clads2-panda-129",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-129.wppl 12",
    "output": "6.476606616109336\n6.356741681985554\n6.4439865353173325\n6.313074759677885\n6.395186559682722\n6.5048512392470865\n6.32603202485112\n6.4305129547211735\n6.367359118522977\n6.436182533485734\n6.36230821972044\n6.41299438960033\n"
  },
  {
    "label": "clads2-panda-130",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-130.wppl 12",
    "output": "-100.08959003252862\n-100.33420803188153\n-100.34726857148121\n-100.35251780853065\n-100.20689507958416\n-99.88428125873179\n-100.43478976271996\n-100.36818028147809\n-100.12816940554265\n-100.41973127595527\n-100.7961366410562\n-100.36056650708741\n"
  },
  {
    "label": "clads2-panda-131",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-131.wppl 12",
    "output": "-62.059003977944414\n-62.29517715244346\n-61.875187420100936\n-62.38553693031678\n-61.79748365619289\n-61.89035151320042\n-62.118084148632114\n-61.91638174172917\n-61.79736496439059\n-61.777340728225305\n-61.6305987276308\n-61.80709092722866\n"
  },
  {
    "label": "clads2-panda-132",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-132.wppl 12",
    "output": "-51.14616524700974\n-51.287726008718685\n-50.971729342159584\n-51.09825631357449\n-51.20194941827173\n-51.294326458302265\n-51.19769438122369\n-51.090342530666796\n-51.15311256398817\n-51.20313571404954\n-51.29741039338106\n-51.13299010973712\n"
  },
  {
    "label": "clads2-panda-133",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-133.wppl 12",
    "output": "-199.24907667457822\n-197.56538587253053\n-197.219301711805\n-198.98050405055136\n-198.63820651780082\n-194.32820468067217\n-195.5932938661226\n-198.34441358571118\n-199.35733147277102\n-197.62396906744266\n-197.83784092262687\n-198.45587982133142\n"
  },
  {
    "label": "clads2-panda-134",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-134.wppl 12",
    "output": "-214.3983984695608\n-218.56042273621074\n-212.13313278806396\n-216.16650977204318\n-217.63689211996808\n-214.08716532786082\n-213.7450405596202\n-214.1676120942477\n-215.67894565845236\n-212.4444118180125\n-214.3288295326553\n-219.7187183794339\n"
  },
  {
    "label": "clads2-panda-135",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-135.wppl 12",
    "output": "-239.53836016214632\n-239.40208604724398\n-242.1978329644181\n-243.58909475490154\n-231.60701854598412\n-235.1131172907123\n-235.03222747809477\n-239.4076851767292\n-234.4500849832937\n-244.65550975740732\n-237.43840260284225\n-231.2673551799319\n"
  },
  {
    "label": "clads2-panda-136",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-136.wppl 12",
    "output": "-41.26979868120824\n-41.23807366650321\n-41.35562635035743\n-41.381605770960846\n-41.280663768164565\n-41.41071704767641\n-41.31512706749836\n-41.23722264997185\n-41.175277585011834\n-41.20209596863806\n-41.196964894085305\n-41.270538117027726\n"
  },
  {
    "label": "clads2-panda-137",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-137.wppl 12",
    "output": "4.532659040290593\n4.533451431405773\n4.503072641851418\n4.571010278035134\n4.4680647950392185\n4.497132150612625\n4.529468505726305\n4.393090389415171\n4.495950698298811\n4.535774225155286\n4.430850945018383\n4.645759488158085\n"
  },
  {
    "label": "clads2-panda-138",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-138.wppl 12",
    "output": "22.55671001073977\n22.47846216990453\n22.597914043269753\n22.668733579934216\n22.518557346042115\n22.514031671847242\n22.510532237427633\n22.504144079424545\n22.58400264852787\n22.60933169719193\n22.494248862412377\n22.528938289417894\n"
  },
  {
    "label": "clads2-panda-139",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-139.wppl 12",
    "output": "-84.66512085090557\n-84.96129887106419\n-84.75088697767528\n-84.91911683284798\n-84.84819452894016\n-85.05408349221975\n-84.8347271041586\n-85.01491960678909\n-84.87148543507513\n-84.71675470276654\n-84.5128377447871\n-84.48433488957579\n"
  },
  {
    "label": "clads2-panda-140",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-140.wppl 12",
    "output": "-46.43809436639522\n-46.35014285299046\n-46.54738640019472\n-46.54184373573381\n-46.40347549526256\n-46.249117155331085\n-46.432772553374285\n-46.5928499697273\n-46.28656184251569\n-46.33573730351577\n-46.62494203652028\n-46.439968545225405\n"
  },
  {
    "label": "clads2-panda-141",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-141.wppl 12",
    "output": "-34.70820885426848\n-34.55521141127932\n-34.617543137432854\n-34.698001949061634\n-34.59644075831952\n-34.770461771161564\n-34.70599287706859\n-34.95500891154664\n-34.682178703168724\n-34.944470394909075\n-34.5827531823044\n-34.753618979747316\n"
  },
  {
    "label": "clads2-panda-142",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-142.wppl 12",
    "output": "-227.2998623296334\n-227.98726726034596\n-226.38256870554298\n-225.21737963995517\n-223.39976175948658\n-221.17395526937182\n-227.3510151725888\n-224.31545415340057\n-226.94585118170804\n-222.7071814835326\n-223.34801415706616\n-226.20039157668617\n"
  },
  {
    "label": "clads2-panda-143",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-143.wppl 12",
    "output": "-217.51180321565474\n-215.35052540644764\n-218.24277799850222\n-222.53833950439858\n-221.0782475104111\n-217.5145686915881\n-215.83601819517008\n"
  },
  {
    "label": "clads2-panda-144",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-144.wppl 12",
    "output": ""
  },
  {
    "label": "clads2-panda-145",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-145.wppl 12",
    "output": "-41.214132426593\n-41.23452812204751\n-41.222226260112386\n-41.26539618878506\n-41.279409968148165\n-41.2995580820028\n-41.300014258438395\n-41.44198930551831\n-41.40485652906067\n-41.30099816881613\n-41.19822657132588\n-41.25218655630602\n"
  },
  {
    "label": "clads2-panda-146",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-146.wppl 12",
    "output": "4.528121335077143\n4.387737576222797\n4.494606532192716\n4.531655880367802\n4.466040915131629\n4.423744759845988\n4.541155255205226\n4.6775633093049045\n4.492178254662969\n4.424725401454904\n4.501139692227937\n4.520676126751088\n"
  },
  {
    "label": "clads2-panda-147",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-147.wppl 12",
    "output": "22.604103003868957\n22.488207718123096\n22.53242997303299\n22.520755482213602\n22.54959365751645\n22.54141944634258\n22.50128831488503\n22.523379688909596\n22.45361041844172\n22.520528144795815\n22.50081356932877\n22.62470571942158\n"
  },
  {
    "label": "clads2-panda-148",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-148.wppl 12",
    "output": "-84.89626844330907\n-85.0408170122218\n-84.92962214805371\n-85.11790241137149\n-84.73479741699958\n-85.09584461596744\n-84.99877770240062\n-84.91156804249114\n-84.89257652387701\n-84.44257512282998\n-85.11630525029825\n-84.87580468316594\n"
  },
  {
    "label": "clads2-panda-149",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-149.wppl 12",
    "output": "-46.58259017781877\n-46.840054176068726\n-46.78390209690488\n-46.54908864847816\n-46.5361353608965\n-46.20689197393866\n-46.5000201298479\n-46.42508173000964\n-46.73803924792592\n-46.511299237609606\n-46.90828224766828\n-46.28400941260354\n"
  },
  {
    "label": "clads2-panda-150",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-150.wppl 12",
    "output": "-34.84464019475799\n-34.72955612759138\n-34.568875557650344\n-34.79374031767884\n-34.53661782528205\n-34.84894987553613\n-34.66277454909343\n-34.67159339742989\n-34.86980876286812\n-34.805153274951884\n-34.482569464207806\n-34.5911398923957\n"
  },
  {
    "label": "clads2-panda-151",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-151.wppl 12",
    "output": "-224.9436665878101\n-221.1959609617044\n-223.35710344154674\n-222.77132982958628\n-225.1089130338886\n-223.9671007704034\n-220.3741663570038\n-223.3275314622336\n-225.33364135622128\n-224.91131341360628\n-223.12077864742363\n-220.24383938477442\n"
  },
  {
    "label": "clads2-panda-152",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-152.wppl 12",
    "output": "-224.25861582820093\n-221.18025029280153\n-216.6958910871724\n-219.8357512668224\n-217.12479152381022\n"
  },
  {
    "label": "clads2-panda-153",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-153.wppl 12",
    "output": "-223.63417379667638\n-218.87858977003467\n"
  },
  {
    "label": "clads2-panda-154",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-154.wppl 12",
    "output": "-41.38811133095415\n-41.40601818057317\n-41.53575235378048\n-41.38162997343365\n-41.41289288710563\n-41.38455697046716\n-41.39671274998101\n-41.38918039127289\n-41.35434210800546\n-41.424111467179074\n-41.31446369786015\n-41.47526575887783\n"
  },
  {
    "label": "clads2-panda-155",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-155.wppl 12",
    "output": "4.355560410868879\n4.279719794041288\n4.3915560904345625\n4.422148403687665\n4.334059096549538\n4.355553885397558\n4.451737108601284\n4.337466594533744\n4.420019911163184\n4.441026398002107\n4.31169825778181\n4.359723569808219\n"
  },
  {
    "label": "clads2-panda-156",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-156.wppl 12",
    "output": "22.4061805633016\n22.32059656471637\n22.377933246563707\n22.422259302716647\n22.364009720433835\n22.378040380994953\n22.38955731192524\n22.39308313791753\n22.325793169635173\n22.415433439569135\n22.373949332645537\n22.32275144269135\n"
  },
  {
    "label": "clads2-panda-157",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-157.wppl 12",
    "output": "-85.42742704493533\n-85.50022005922405\n-85.19484718749239\n-84.99639295004404\n-85.37736223395939\n-85.2655987295412\n-85.17098019995592\n-85.41927857452565\n-85.07631133957105\n-85.27071319025663\n-85.18276286934353\n-85.1591270237493\n"
  },
  {
    "label": "clads2-panda-158",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-158.wppl 12",
    "output": "-47.009364453866645\n-47.107658847839566\n-46.837785327610554\n-46.860548324959666\n-46.815027429646406\n-46.94138651925049\n-47.093399370990284\n-46.6506729134948\n-46.95157993884861\n-46.75149467152507\n-46.979740966115436\n-46.877138520531574\n"
  },
  {
    "label": "clads2-panda-159",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-159.wppl 12",
    "output": "-35.08075836337313\n-34.75691969522477\n-34.87642562338013\n-35.235105408443474\n-35.19806268555193\n-35.082650342889\n-35.06667259510796\n-35.01193368501363\n-35.14374373165407\n-35.0249444664323\n-35.24213406711668\n-35.15085369013888\n"
  },
  {
    "label": "clads2-panda-160",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-160.wppl 12",
    "output": "-220.20192413261302\n-219.91432800335997\n-223.67272016808366\n-220.98338815102835\n-221.81504487139134\n-219.9341835544811\n-221.23965175483366\n-219.13016423799735\n-221.4362918598466\n-221.41562741522495\n-219.74517246852704\n-219.97773929251292\n"
  },
  {
    "label": "clads2-panda-161",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-161.wppl 12",
    "output": "-217.5552216717655\n-212.52907664083372\n-210.17384704312636\n-216.6578837307255\n-215.06451169235834\n-212.08079531945089\n-237.80490393145905\n-214.60899448066283\n-213.77883833794658\n-214.13689299258908\n"
  },
  {
    "label": "clads2-panda-162",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 0.6,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 0.6\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-162.wppl 12",
    "output": "-221.88129827210244\n-219.12738058520387\n-219.34726132678477\n-217.3230006467533\n"
  },
  {
    "label": "clads2-panda-163",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-163.wppl 12",
    "output": "-98.4028283994874\n-98.67015561376736\n-98.63871684006793\n-98.5242516763522\n-98.84348782140816\n-98.76401370914176\n-98.39616446942658\n-98.5094952444512\n-98.37055382032487\n-98.4547971323295\n-98.63667425368814\n-98.98285655010687\n"
  },
  {
    "label": "clads2-panda-164",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-164.wppl 12",
    "output": "-52.96942795728387\n-52.814847018910314\n-53.0521015241859\n-53.093615069841434\n-52.8293574289884\n-52.96650572543149\n-52.95515037305579\n-52.724975415476734\n-53.02358318588606\n-53.046431232632784\n-53.008671727317775\n-52.96116919076139\n"
  },
  {
    "label": "clads2-panda-165",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-165.wppl 12",
    "output": "-35.27432001342197\n-35.10829666171874\n-35.206791450134624\n-35.15267854937869\n-35.269238044497214\n-35.205010924089144\n-35.17257726399785\n-35.172687468875964\n-35.09834573179673\n-35.03550176623607\n-35.3016249360531\n-35.22730950176947\n"
  },
  {
    "label": "clads2-panda-166",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-166.wppl 12",
    "output": "-141.06934820878988\n-140.37517252838765\n-141.09240848754942\n-140.32155877711827\n-140.60371917897717\n-141.11073428263626\n-140.93632890791824\n-140.8000889102326\n-140.86996254955585\n-140.9311423099586\n-140.60437803873785\n-141.17524059927376\n"
  },
  {
    "label": "clads2-panda-167",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-167.wppl 12",
    "output": "-102.72397426484375\n-102.65527938928817\n-102.93655798414977\n-102.56241568620946\n-102.47327885335329\n-102.80023113925168\n-102.41567025788095\n-102.27719800548928\n-102.58280227972402\n-102.43235412840019\n-102.64797237974551\n-102.35345382213507\n"
  },
  {
    "label": "clads2-panda-168",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-168.wppl 12",
    "output": "-92.46755523431804\n-92.632088335733\n-92.3565225074532\n-92.76483520214472\n-92.30674819490501\n-92.43121661001507\n-92.31656494362727\n-92.18688972520957\n-92.40252657667736\n-92.37678050673418\n-92.4577402104918\n-92.10781930854475\n"
  },
  {
    "label": "clads2-panda-169",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-169.wppl 12",
    "output": "-233.7538686391624\n-232.86162593746147\n-236.45526724118568\n-235.95424927253077\n-233.27904249489586\n-235.67226557811622\n-235.13287819138972\n-237.6923645760488\n-237.01901784630965\n-233.86324427695925\n-235.78542667284324\n-235.30488333962313\n"
  },
  {
    "label": "clads2-panda-170",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-170.wppl 12",
    "output": "-244.5911362039177\n-251.0051399961698\n-247.97576523600515\n-245.68921031969805\n-240.60765671073173\n-243.9874365998785\n-247.52518231659542\n-243.25783257100753\n-240.95338600174586\n-245.77832603280592\n-243.59510030182906\n-246.30534819445296\n"
  },
  {
    "label": "clads2-panda-171",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-171.wppl 12",
    "output": "-288.5521551772465\n-286.7232779309636\n-289.27095860332906\n-280.0532897661203\n-285.3772176957996\n-279.8600773338096\n-303.42165104944365\n-305.85238688857487\n-277.2845893765126\n"
  },
  {
    "label": "clads2-panda-172",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-172.wppl 12",
    "output": "-98.81188431188117\n-98.59010128665956\n-98.89548336412224\n-98.77209197249931\n-98.6648350811836\n-98.81079254948932\n-98.75688137804747\n-98.78055638227085\n-98.6898553248059\n-98.63672938831819\n-98.507499906173\n-98.62546144851052\n"
  },
  {
    "label": "clads2-panda-173",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-173.wppl 12",
    "output": "-52.887543123638366\n-52.81719707917047\n-53.128300560736065\n-53.287701751099625\n-52.90572289437785\n-52.94698549286717\n-52.914166614699525\n-53.04862394898489\n-53.10289143492301\n-52.97230428367279\n-52.968996024572455\n-52.75459688798644\n"
  },
  {
    "label": "clads2-panda-174",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-174.wppl 12",
    "output": "-35.205820521670205\n-35.29709088206728\n-35.148558325462155\n-35.11520552167721\n-35.13229546930042\n-35.373771572803385\n-35.23757697498753\n-35.248117438782\n-35.23519658079325\n-35.20231176004344\n-35.25457659395845\n-35.07888666020876\n"
  },
  {
    "label": "clads2-panda-175",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-175.wppl 12",
    "output": "-140.87609927510175\n-141.09200400832327\n-140.752758919295\n-140.57637116364728\n-141.0609323399086\n-140.83155504331503\n-141.00298605343275\n-141.18274137740838\n-141.1134939264269\n-141.0204070499678\n-141.11945341939008\n-141.08164119179042\n"
  },
  {
    "label": "clads2-panda-176",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-176.wppl 12",
    "output": "-102.38560537937042\n-102.67023476164793\n-103.16478429976183\n-102.82707379422769\n-102.77385573859983\n-102.926197967124\n-102.65679598083086\n-102.56891437978038\n-102.56289978955624\n-102.84372450989775\n-102.41056270778935\n-102.80127725543943\n"
  },
  {
    "label": "clads2-panda-177",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-177.wppl 12",
    "output": "-92.48045025268996\n-92.414469241048\n-92.78961314472454\n-92.65378746899931\n-92.58243875908427\n-92.58789435722785\n-92.49353034326798\n-92.53675974304508\n-92.6205609344189\n-92.41319799021646\n-92.25802011931437\n-92.44203682927191\n"
  },
  {
    "label": "clads2-panda-178",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-178.wppl 12",
    "output": "-234.84815364307383\n-236.6573163445629\n-237.3959604094113\n-236.1204249975462\n-235.07827376173455\n-233.12212690392852\n-238.50374803880032\n-235.60738431873116\n-235.88444673822718\n-235.62486968254598\n-236.09650182291801\n-228.45112489204664\n"
  },
  {
    "label": "clads2-panda-179",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-179.wppl 12",
    "output": "-251.12309169597265\n-241.8803675594177\n-245.5612179682719\n-247.96202518327587\n-244.50298342337695\n-245.64170498635204\n-242.3296351022381\n-241.41740023544136\n-244.1129701538308\n-243.53320171163205\n-249.40917945978083\n-248.20627410370975\n"
  },
  {
    "label": "clads2-panda-180",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-180.wppl 12",
    "output": "-284.2964672934552\n-283.4297714697234\n-286.9548238258959\n-292.7135373214803\n-284.03257510641276\n-298.1075555287242\n-279.70254107124185\n-282.3485457001484\n-286.50440688978324\n-278.813921233796\n-280.0635325903062\n"
  },
  {
    "label": "clads2-panda-181",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-181.wppl 12",
    "output": "-98.70006811655622\n-98.79542580143648\n-99.12244137521692\n-98.65658467651664\n-98.96883973712659\n-98.92833578580786\n-98.95468296976837\n-98.75040449126035\n-98.81435165569759\n-98.74981162236263\n-98.8285777560852\n-98.81894945694344\n"
  },
  {
    "label": "clads2-panda-182",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-182.wppl 12",
    "output": "-53.33822261611181\n-52.92011916543562\n-53.07750930515114\n-53.003744556260344\n-53.0309528634762\n-53.06438312208637\n-53.10216510814333\n-53.119370777522704\n-53.13171313907713\n-53.05041794153521\n-52.93817863145334\n-53.06987825444577\n"
  },
  {
    "label": "clads2-panda-183",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-183.wppl 12",
    "output": "-35.31455284964903\n-35.368633793662084\n-35.21297740572304\n-35.295466913560055\n-35.28757370223082\n-35.33444315396707\n-35.34677498487576\n-35.34501065251325\n-35.21890098841987\n-35.1272531157355\n-35.2247603716844\n-35.29220016627277\n"
  },
  {
    "label": "clads2-panda-184",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-184.wppl 12",
    "output": "-141.69633702292293\n-141.27405729913497\n-142.41267867706298\n-141.40284012174698\n-141.46358614314744\n-141.25805614577084\n-141.5702349091793\n-141.5852521668081\n-141.455841249756\n-141.31127821992845\n-141.66971984037787\n-141.3761196183019\n"
  },
  {
    "label": "clads2-panda-185",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-185.wppl 12",
    "output": "-103.24834930239379\n-103.07189447329158\n-103.2750392058027\n-103.09921869687005\n-102.66973087490064\n-102.79320923847969\n-102.9776810767645\n-103.16773041044219\n-102.91243792765773\n-103.06169159847191\n-103.40913526478727\n-103.05321409568502\n"
  },
  {
    "label": "clads2-panda-186",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-186.wppl 12",
    "output": "-92.79755142719729\n-92.85980854701994\n-92.99625488376454\n-93.06332737839644\n-92.82402303154095\n-92.9333345137991\n-92.96268844880423\n-92.97305710401139\n-92.93680256616835\n-92.90363845666747\n-93.00121021269842\n-92.71973148496605\n"
  },
  {
    "label": "clads2-panda-187",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-187.wppl 12",
    "output": "-238.0637126037376\n-234.45091646933207\n-237.05046636689923\n-237.67513776322087\n-238.79097464097043\n-235.29062975496518\n-235.101884158459\n-236.37976109309497\n-237.49757323442122\n-237.8924175286925\n-236.29810383828072\n-237.0747919806689\n"
  },
  {
    "label": "clads2-panda-188",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-188.wppl 12",
    "output": "-244.5945471491175\n-247.07640532115596\n-243.0344181059877\n-246.9757136811889\n-245.01148034785044\n-244.21085560750566\n-247.84305576424316\n-242.79228633467807\n-245.70636679263154\n-247.94746555691336\n-245.23338737603783\n-245.27567356914994\n"
  },
  {
    "label": "clads2-panda-189",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.4,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.4\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-189.wppl 12",
    "output": "-273.33191368194514\n-274.44069680581094\n-274.0998412753154\n-270.9085003017781\n-269.6573596657347\n-279.0932838369889\n-270.1545291442354\n-271.55225499418805\n-272.80186372257583\n-274.82319393900104\n-269.10237024839023\n-280.92636369513286\n"
  },
  {
    "label": "clads2-panda-190",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-190.wppl 12",
    "output": "-78.21359419270426\n-78.09569547937822\n-78.24434381303102\n-78.07953048995007\n-78.09179827174604\n-78.19059625668041\n-78.13038477156778\n-78.18214945105733\n-77.9651577371459\n-78.04318167539613\n-78.21551605352676\n-78.1483147286474\n"
  },
  {
    "label": "clads2-panda-191",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-191.wppl 12",
    "output": "-32.572205271305734\n-32.8131312995865\n-32.66651310938925\n-32.71452108758177\n-32.74883561259223\n-32.668235811906015\n-32.64229148669321\n-32.6486085808412\n-32.68741086814745\n-32.80750799888905\n-32.67781655380563\n-32.572536978215865\n"
  },
  {
    "label": "clads2-panda-192",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-192.wppl 12",
    "output": "-14.994983694549394\n-14.864956459597318\n-14.819348602684295\n-14.880867847136859\n-14.945179480065814\n-14.82385238850103\n-14.882200996050233\n-14.783230461809797\n-14.975867862361\n-14.922689649210302\n-14.960647884870596\n-14.840668617854584\n"
  },
  {
    "label": "clads2-panda-193",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-193.wppl 12",
    "output": "-120.3675505161239\n-120.46542241431655\n-120.41636541365762\n-120.17520993332016\n-120.60976629138314\n-120.56972279998726\n-119.84255212948584\n-120.51100190517118\n-120.2614038385343\n-120.05326749094304\n-120.45214168296208\n-120.29861044185665\n"
  },
  {
    "label": "clads2-panda-194",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-194.wppl 12",
    "output": "-82.76469163633477\n-82.7375454900428\n-82.77542796495688\n-82.94070863016236\n-82.84453806194715\n-82.64015395941341\n-82.70986247601117\n-82.5284637638315\n-82.41150309364497\n-82.8953855463158\n-82.86925431013535\n-82.71418477187498\n"
  },
  {
    "label": "clads2-panda-195",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-195.wppl 12",
    "output": "-72.1610072436896\n-72.26093772520485\n-71.95460559243007\n-71.92086278135321\n-72.20814840088292\n-72.09629006279911\n-72.0646937017895\n-71.98630508904945\n-72.29359292563396\n-71.97081220408947\n-72.06178711566699\n-72.04293608572424\n"
  },
  {
    "label": "clads2-panda-196",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-196.wppl 12",
    "output": "-226.92393519530708\n-229.02213464669316\n-230.81034826983822\n-224.88214280781963\n-229.56539888253678\n-228.49025778496986\n-226.440845758522\n-228.2265320256527\n-227.96263590714784\n-229.7155175836691\n-229.11786563441234\n-225.62756940038264\n"
  },
  {
    "label": "clads2-panda-197",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-197.wppl 12",
    "output": "-230.6528097083628\n-236.4518401675112\n-234.47903919667604\n-230.38409241696317\n-233.96093988792958\n-236.7551067087284\n-233.44265030516564\n-233.9210850662159\n-236.0659029828886\n-239.57252477210403\n-234.78316129377356\n-233.26524417323654\n"
  },
  {
    "label": "clads2-panda-198",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-198.wppl 12",
    "output": "-262.74702877509424\n-265.8315585518077\n-256.12332558440073\n-266.4844507471739\n"
  },
  {
    "label": "clads2-panda-199",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-199.wppl 12",
    "output": "-78.20195727568732\n-78.15233393418578\n-78.11379137987349\n-78.29553054298115\n-78.07773512607014\n-78.12099897828384\n-78.1206893175624\n-78.148795579871\n-78.26208539016004\n-78.08150402549848\n-77.9806409654815\n-78.07247367871318\n"
  },
  {
    "label": "clads2-panda-200",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-200.wppl 12",
    "output": "-32.66305907662996\n-32.620427462878595\n-32.63227575672693\n-32.68508491137166\n-32.682756096408426\n-32.650020265258696\n-32.63304031017192\n-32.573026523963875\n-32.69885412321278\n-32.711075080140766\n-32.59264270932478\n-32.65687175499715\n"
  },
  {
    "label": "clads2-panda-201",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-201.wppl 12",
    "output": "-14.924761603733973\n-14.838387893363889\n-14.858833903156313\n-14.894787364296509\n-14.930991590775175\n-14.888875499039296\n-14.907426442035671\n-14.983783372315077\n-14.793470732530619\n-14.990407855462012\n-14.867694448781222\n-14.986874815593616\n"
  },
  {
    "label": "clads2-panda-202",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-202.wppl 12",
    "output": "-120.59156718312913\n-120.23982264945566\n-120.47069270569776\n-120.73423775113956\n-120.14007996308203\n-120.64352109573773\n-120.51802555314107\n-120.84267417214694\n-120.41219353071857\n-120.65888797625378\n-121.05597623900061\n-120.40892692135158\n"
  },
  {
    "label": "clads2-panda-203",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-203.wppl 12",
    "output": "-82.58254801011874\n-83.05277220150073\n-82.8715679889007\n-82.90286643213298\n-82.76068605369358\n-83.0156959410875\n-82.51402878112182\n-82.73357516430197\n-82.62198665402025\n-82.73797573128891\n-82.81111830703018\n-82.93099142297795\n"
  },
  {
    "label": "clads2-panda-204",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-204.wppl 12",
    "output": "-72.27760906568459\n-72.14327841107385\n-72.17953354274894\n-72.32891740862314\n-72.21762159434833\n-71.96493725691568\n-72.11844782388815\n-72.08078982823355\n-72.16146350670586\n-72.0294712602512\n-72.00784324322345\n-72.00956280938976\n"
  },
  {
    "label": "clads2-panda-205",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-205.wppl 12",
    "output": "-229.00354771482367\n-228.22782263737346\n-227.39765167501145\n-228.48438946129437\n-229.451896953805\n-229.8553122160313\n-227.86807282784235\n-229.96745179827832\n-228.31618484406258\n-229.19102041454258\n-227.8996210699518\n-231.9874266427591\n"
  },
  {
    "label": "clads2-panda-206",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-206.wppl 12",
    "output": "-232.10503382155846\n-236.15973307577812\n-238.0725588981774\n-235.2865018621914\n-238.24236136642688\n-232.27813756406405\n-232.02790922417213\n-235.62748215893657\n-233.4976205903073\n-236.48640547421058\n-234.16401490162573\n-239.00571693360587\n"
  },
  {
    "label": "clads2-panda-207",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-207.wppl 12",
    "output": "-261.51093529596227\n-257.1891437686896\n-259.72053472425756\n-257.31550581303446\n-256.4261836439497\n-259.6771361009344\n-254.85096336264388\n-259.2448350170314\n"
  },
  {
    "label": "clads2-panda-208",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-208.wppl 12",
    "output": "-78.35121742816419\n-78.27908894799522\n-78.26378971729156\n-78.30022525303538\n-78.24668123058609\n-78.4837922408044\n-78.37793230987452\n-78.2473290765769\n-78.31315376681243\n-78.2801814129235\n-78.40653215180681\n-78.43487895051547\n"
  },
  {
    "label": "clads2-panda-209",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-209.wppl 12",
    "output": "-32.852375392293325\n-32.80891219280005\n-32.64872724589354\n-32.81842704514183\n-32.774913183204006\n-32.942268222210984\n-32.868192826839405\n-32.93189555013682\n-32.77281066118364\n-32.77626490570149\n-32.685125198504316\n-32.805749864601694\n"
  },
  {
    "label": "clads2-panda-210",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-210.wppl 12",
    "output": "-15.067551183371904\n-15.078345535437943\n-15.071843031619057\n-15.066414274814273\n-15.056457978692206\n-15.233281718306728\n-14.999013463964252\n-14.947128865933788\n-15.100684580193203\n-15.082157450757727\n-14.901968331398821\n-15.041836209737058\n"
  },
  {
    "label": "clads2-panda-211",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-211.wppl 12",
    "output": "-120.76655519398861\n-121.17240488249179\n-120.88815851381342\n-121.12949252420347\n-121.00128235068982\n-121.22080396171668\n-120.87057241935084\n-120.67633960922734\n-121.09044929871037\n-121.02190651418508\n-120.83415459904306\n-121.17342211994448\n"
  },
  {
    "label": "clads2-panda-212",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-212.wppl 12",
    "output": "-83.25327287514419\n-83.40240396634044\n-83.1124267029628\n-83.06690258326245\n-83.197323220611\n-83.22125248623394\n-82.87043512619252\n-83.32338940521834\n-83.44059673456253\n-83.27638542154132\n-83.02419308148632\n-83.31160803670922\n"
  },
  {
    "label": "clads2-panda-213",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-213.wppl 12",
    "output": "-72.35762402972469\n-72.23340496795916\n-72.32124588335071\n-72.53168021574606\n-72.44427843212908\n-72.32826357319865\n-72.728656732683\n-72.50286091372409\n-72.17228943561632\n-72.68783177294422\n-72.86220446105675\n-72.590623552287\n"
  },
  {
    "label": "clads2-panda-214",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-214.wppl 12",
    "output": "-229.34685442076753\n-228.72598798367284\n-231.12213989335083\n-230.75713524834288\n-228.56201746304956\n-229.1064286764179\n-226.04853390920817\n-228.52466295918063\n-228.5555085692809\n-231.57542009375214\n-226.55915199164045\n-229.60313086276707\n"
  },
  {
    "label": "clads2-panda-215",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-215.wppl 12",
    "output": "-230.2068116257608\n-232.45898881480653\n-232.92110904689187\n-236.04015400295052\n-232.08079081524664\n-230.0729358369749\n-234.14971334880602\n-232.04993344059343\n-233.6217922094778\n-235.33560365802708\n-231.23926209758756\n-231.32909662900707\n"
  },
  {
    "label": "clads2-panda-216",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 0.65,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 0.65\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-216.wppl 12",
    "output": "-255.8657972207502\n-253.89691141425877\n-264.6028902441674\n-250.11988103072443\n-256.67432471844836\n-254.95691046536555\n-256.73204504660515\n-254.13607250057856\n-252.56173394537086\n-253.9382988137696\n-256.28550597942854\n-259.9806099918221\n"
  },
  {
    "label": "clads2-panda-217",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-217.wppl 12",
    "output": "-73.0713974948491\n-73.18767443505283\n-73.11781946895444\n-73.00205163989469\n-73.05287391513554\n-72.96692958036157\n-72.9940329064901\n-73.01158008091474\n-73.15428457060855\n-73.13246472869521\n-73.09825497468351\n-72.89757732833934\n"
  },
  {
    "label": "clads2-panda-218",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-218.wppl 12",
    "output": "-27.210039382990786\n-27.163368140368277\n-27.08053314090933\n-27.20228935434523\n-27.19683245998845\n-27.159963498709075\n-27.175441759499346\n-27.152474765644598\n-27.07280665521808\n-27.164813066882257\n-27.20222950584643\n-27.1677982282256\n"
  },
  {
    "label": "clads2-panda-219",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-219.wppl 12",
    "output": "-9.124124999763705\n-9.209348312495859\n-9.066330552233808\n-9.319446669456743\n-9.100299248425088\n-9.094791266832091\n-9.176193752206988\n-9.069895957868244\n-9.034861517351533\n-9.084192031898398\n-9.016566942448545\n-9.166613986538657\n"
  },
  {
    "label": "clads2-panda-220",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-220.wppl 12",
    "output": "-118.50115059129364\n-118.44747331911711\n-118.41090839945178\n-118.87003005379721\n-118.64052576688421\n-118.51793905745751\n-118.59808047262854\n-118.3243875800845\n-118.29473410711898\n-118.90434305693375\n-118.41609475069154\n-118.62146193081954\n"
  },
  {
    "label": "clads2-panda-221",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-221.wppl 12",
    "output": "-78.82879419365456\n-78.62973508970904\n-78.61719654899812\n-78.66845413453565\n-78.88440277718117\n-78.52040260567324\n-78.37551561538177\n-78.57782298208943\n-78.47732723749009\n-78.46186242365361\n-78.61429451520607\n-78.85743172333665\n"
  },
  {
    "label": "clads2-panda-222",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-222.wppl 12",
    "output": "-66.68155274974191\n-66.46352067522609\n-66.23384583513563\n-66.32665386794397\n-66.25412263197674\n-66.40578903365852\n-66.12727041136179\n-66.60741643095783\n-66.38154925386726\n-66.22519319591385\n-66.2351006976414\n-66.23704197237335\n"
  },
  {
    "label": "clads2-panda-223",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-223.wppl 12",
    "output": "-260.3284372493323\n-258.2510127248295\n-255.91579319798325\n-256.630828555419\n-260.2411555824974\n-254.60760228373664\n-257.7795867575465\n-253.89932636193745\n-257.0717876864195\n-257.75975311365914\n-255.27349454049173\n-257.2401162589872\n"
  },
  {
    "label": "clads2-panda-224",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-224.wppl 12",
    "output": "-247.5410443878833\n-243.88376330967233\n-242.71285125984957\n-246.50501493624208\n-244.74798283514002\n-245.9011404340814\n-247.0999889628726\n-252.12632513506534\n-247.1914603121084\n-245.41284511218362\n-248.17148432390823\n"
  },
  {
    "label": "clads2-panda-225",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.015,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.015\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-225.wppl 12",
    "output": "-249.02785626940866\n"
  },
  {
    "label": "clads2-panda-226",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-226.wppl 12",
    "output": "-73.11255685892655\n-72.95323342731783\n-73.11398737999826\n-72.92160789789037\n-73.07466598327761\n-73.02510438481985\n-73.04679051769614\n-73.1425654948107\n-73.09483055824596\n-73.12651504309855\n-73.14050598787377\n-72.97085453135114\n"
  },
  {
    "label": "clads2-panda-227",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-227.wppl 12",
    "output": "-27.2324717704611\n-27.176249897980913\n-27.166071184512987\n-27.292255157580954\n-27.205914534387095\n-27.226632236509\n-27.162237081987314\n-27.092035543457378\n-27.211712798046452\n-27.278829196770282\n-27.16487191395996\n-27.211022112170518\n"
  },
  {
    "label": "clads2-panda-228",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-228.wppl 12",
    "output": "-9.1039000689379\n-9.18740772293966\n-9.302714419023676\n-9.139977455151108\n-9.104750502641174\n-9.122653290427337\n-9.132002234464847\n-9.150034228318688\n-9.237553352131897\n-9.083318075340252\n-9.226008109870087\n-9.330089769834027\n"
  },
  {
    "label": "clads2-panda-229",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-229.wppl 12",
    "output": "-118.74324640451897\n-118.39346294945753\n-118.63211815529476\n-118.36867596716168\n-118.58020619565681\n-118.43381693453529\n-118.75237506014545\n-118.49409643608001\n-118.35292408602685\n-118.31299603319243\n-118.49727413659026\n-118.83855000643365\n"
  },
  {
    "label": "clads2-panda-230",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-230.wppl 12",
    "output": "-78.68107118304842\n-78.64203115836413\n-78.80598157473185\n-78.45335992441073\n-78.55174675263035\n-78.70388517019978\n-78.67160774414452\n-78.7084390473366\n-78.8870863728226\n-78.61664829625433\n-78.62482759294008\n-78.5858584336673\n"
  },
  {
    "label": "clads2-panda-231",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-231.wppl 12",
    "output": "-66.52138227559476\n-66.3261594395465\n-66.53857913467684\n-66.18449128350582\n-66.42889735837058\n-66.58533513325071\n-66.2460515899707\n-66.20386843734362\n-66.46730566995774\n-66.56138139115765\n-66.58689976029845\n-66.43370998925319\n"
  },
  {
    "label": "clads2-panda-232",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-232.wppl 12",
    "output": "-253.833723975146\n-258.3247398763796\n-259.8830735448829\n-258.250978814763\n-255.11208438300866\n-255.44639941924717\n-254.77113661026684\n-256.7371077915157\n-255.8326280428743\n-258.1800718401594\n-256.45620126402366\n-257.1409936669784\n"
  },
  {
    "label": "clads2-panda-233",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-233.wppl 12",
    "output": "-241.475330888223\n-245.82923448311638\n-247.0376388581417\n-243.95871809378986\n-243.83138741382095\n-243.71300740270664\n-247.2910391659666\n-243.21046593723614\n-244.94347765998765\n-243.69381234449418\n-243.06624377792923\n-242.61817587512488\n"
  },
  {
    "label": "clads2-panda-234",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.025,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.025\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-234.wppl 12",
    "output": "-252.44535443713482\n-246.45263784716354\n-259.23410529632633\n-254.76625731346485\n"
  },
  {
    "label": "clads2-panda-235",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-235.wppl 12",
    "output": "-73.09443207164931\n-73.1880684845024\n-73.1800834374322\n-73.13625047730446\n-73.16729916637046\n-73.27219924371565\n-73.13177898563696\n-73.12527585467406\n-73.18580786450232\n-73.15241424964353\n-73.17110468219437\n-73.04580034520181\n"
  },
  {
    "label": "clads2-panda-236",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-236.wppl 12",
    "output": "-27.30074643769291\n-27.26150695158907\n-27.360808988254412\n-27.32694085030196\n-27.327739209747865\n-27.341303305367237\n-27.195395320621827\n-27.37092804468366\n-27.308402451979028\n-27.29753194617156\n-27.286199979237974\n-27.283107872197004\n"
  },
  {
    "label": "clads2-panda-237",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.03,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.03\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-237.wppl 12",
    "output": "-9.243965027631981\n-9.254771478126106\n-9.332938882588198\n-9.351137451403634\n-9.231550758836281\n-9.332846568706723\n-9.202382812841446\n-9.288944764801384\n-9.344283950373772\n-9.35641967887035\n-9.279578556110218\n-9.216078777756495\n"
  },
  {
    "label": "clads2-panda-238",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-238.wppl 12",
    "output": "-118.83803141892695\n-118.99856797665969\n-118.90538973054925\n-119.16746579478789\n-118.84398396555954\n-118.65705482903124\n-118.7891098408126\n-119.24001558700743\n-118.85474633944146\n-119.14452720911902\n-118.95582215332162\n-118.9653958282961\n"
  },
  {
    "label": "clads2-panda-239",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-239.wppl 12",
    "output": "-78.9236401798385\n-78.87407933567064\n-78.99078277289087\n-79.0828723117341\n-79.07344253273882\n-78.99459503032061\n-79.08297759923072\n-79.0276153922279\n-79.22576728514261\n-79.04318247814246\n-79.06123633162962\n-79.06183291215744\n"
  },
  {
    "label": "clads2-panda-240",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 0.12,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 0.12\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-240.wppl 12",
    "output": "-66.3982837956774\n-66.80561557034086\n-66.73382508125385\n-66.72464783262174\n-66.75351487603137\n-66.66256214054525\n-66.74148856210097\n-66.64547231796277\n-66.33100158411972\n-66.67138588159565\n-66.44609943086347\n-66.52120458975\n"
  },
  {
    "label": "clads2-panda-241",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-241.wppl 12",
    "output": "-254.72850667338167\n-256.88950348749205\n-255.6329462300563\n-251.9633839642758\n-255.54148956731137\n-256.7963117432919\n-254.93436646358043\n-256.8457378926639\n-256.5272964104251\n-254.8690685962134\n-257.21827991807686\n-257.16638789488945\n"
  },
  {
    "label": "clads2-panda-242",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 0.5
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 0.5\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-242.wppl 12",
    "output": "-240.0381200317891\n-242.78838658861937\n-242.60326680310072\n-240.24028893563053\n-239.94826257628625\n-237.5674225955921\n-241.87740664289484\n-241.36312212589505\n-243.3538990197403\n-244.6179453190821\n-240.74700753627462\n-244.05970359460116\n"
  },
  {
    "label": "clads2-panda-243",
    "description": "Grid computation for the ClaDS2 (Panda) model. Part of verification.",
    "hyper_parameters": {
      "tree": "phyjs.bisse_32",
      "particles": 1000,
      "MAX_LAMBDA": 5,
      "MAX_DIV": 5,
      "MIN_LAMBDA": 0.00001,
      "PANDA": true
    },
    "parameters": {
      "sigma": 1,
      "alpha": 1,
      "epsilon": 0.065,
      "lambda": 1,
      "rho": 1
    },
    "model": "\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var tree = phyjs.bisse_32\n\tvar particles = 1000\n\tvar MAX_LAMBDA = 5\n\tvar MAX_DIV = 5\n\tvar MIN_LAMBDA = 0.00001\n\tvar PANDA = true\nvar model = function()\n{\n\tvar sigma = 1\n\tvar alpha = 1\n\tvar epsilon = 0.065\n\tvar lambda = 1\n\tvar rho = 1\n\t\n\tif (sigma == 0.000001 && alpha != 1.0) return NaN\n\tvar ret = simClaDS2( tree, lambda, alpha, sigma, epsilon, rho )\n\t\n\tvar dist = Infer ( { model: function() { clads2GoesUndetected( tree.age, lambda, alpha, sigma, epsilon, rho ) }, method: 'forward', samples: 100 + 10/rho } )\n\tfactor( - 2.0 * dist.score( false ) )\n\treturn ret\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/clads/clads2-panda/clads2-panda-243.wppl 12",
    "output": "-246.01825154958274\n-250.06776647787953\n-250.57029522231372\n-251.05106629624132\n-249.6813771121892\n-253.2602996956129\n-257.92787684174516\n-248.89207380273896\n-254.61849399407032\n-253.54753606892208\n"
  }
]