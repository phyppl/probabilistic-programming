[
  {
    "label": "bamm-grid2-lsbds-1",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 1,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 1\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-1.wppl 10",
    "output": "-142.80482494654407\n-142.55472367458765\n-141.01723894062184\n-141.51317067745532\n-141.72543792967042\n-142.64557177167555\n-141.7823105874994\n-141.88653880329323\n-142.78313998427342\n-143.69211576769305\n"
  },
  {
    "label": "bamm-grid2-lsbds-2",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 2,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 2\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-2.wppl 10",
    "output": "-144.88659123956663\n-143.94364132890135\n-144.5303299843799\n-144.37619108799413\n-144.53879882177205\n-143.51160001452945\n-144.51156655297643\n-143.72818551371375\n-143.67488940623429\n-144.71928140911518\n"
  },
  {
    "label": "bamm-grid2-lsbds-3",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 3,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 3\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-3.wppl 10",
    "output": "-147.40038431210922\n-146.59562843034544\n-146.63833807889418\n-146.30972071103864\n-147.04091256726116\n-146.83411959307293\n-146.59276842248977\n-146.95918252648377\n-146.62915420480712\n-146.21035064251436\n"
  },
  {
    "label": "bamm-grid2-lsbds-4",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 4,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 4\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-4.wppl 10",
    "output": "-147.94234693319044\n-148.15340475234112\n-148.61216825114337\n-148.13777690963386\n-148.33264778529923\n-148.8720261780731\n-148.59116032022303\n-148.54685692695597\n-149.11169679552637\n-148.59409194939477\n"
  },
  {
    "label": "bamm-grid2-lsbds-5",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 5,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 5\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-5.wppl 10",
    "output": "-150.13119044623005\n-149.6729597378333\n-150.36732203036703\n-150.27305038943226\n-150.23475239672356\n-149.33884923027762\n-150.3838000237071\n-149.9915935376616\n-149.59829449157326\n-150.37147617902966\n"
  },
  {
    "label": "bamm-grid2-lsbds-6",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 6,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 6\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-6.wppl 10",
    "output": "-151.15344292239692\n-150.9677633501533\n-151.1551895068667\n-151.0379203679497\n-151.1403120473261\n-150.99055324353523\n-151.52651807461322\n-150.89617200533644\n-151.20135795025016\n-151.0525249849986\n"
  },
  {
    "label": "bamm-grid2-lsbds-7",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 7,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 7\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-7.wppl 10",
    "output": "-152.01930490103325\n-152.39471464592566\n-152.20575942839045\n-152.9136438318017\n-152.68194813659542\n-152.38322513791385\n-152.09454175787735\n-153.23936743071351\n-151.96516770037505\n-151.77383478800752\n"
  },
  {
    "label": "bamm-grid2-lsbds-8",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 8,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 8\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-8.wppl 10",
    "output": "-153.41431451632346\n-152.71732394657508\n-153.40258970996408\n-153.05069533920707\n-152.8397659686221\n-153.00759699718787\n-152.97890941681345\n-152.2371320221893\n-153.0683542396405\n-153.22697742669573\n"
  },
  {
    "label": "bamm-grid2-lsbds-9",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 9,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 9\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-9.wppl 10",
    "output": "-153.96268522111149\n-154.1026594000863\n-153.66380615906508\n-153.55878533350216\n-154.18174100682043\n-154.15647778369404\n-154.00975368194997\n-153.57013990397635\n-153.55526219752036\n-154.0122676576738\n"
  },
  {
    "label": "bamm-grid2-lsbds-10",
    "description": "BAMM model for z = 0 should degrade to LSBDS.",
    "hyper_parameters": {
      "particles": 10000,
      "MAX_DIV": 10,
      "MAX_LAMBDA": 10
    },
    "parameters": {
      "tree": "phyjs.bisse_32",
      "EXPECTED_NUM_EVENTS": 10,
      "DistLambda": "function() { return ( exponential( { a: 1 } ) )  }",
      "DistMu": "function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}",
      "DistZ": "function() { return 0 }",
      "lambda_0": "DistLambda()",
      "z_0": "DistZ()",
      "lambdaFun_0": "function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }",
      "mu_0": "DistMu(lambda_0)",
      "eta": "EXPECTED_NUM_EVENTS / tree.age ",
      "rho": 1
    },
    "model": "\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)",
    "inference": {
      "method": "SMC",
      "likelihood": true
    },
    "ppl": "var particles = 10000\n\tvar MAX_DIV = 10\n\tvar MAX_LAMBDA = 10\nvar model = function()\n{\n\tvar tree = phyjs.bisse_32\n\tvar EXPECTED_NUM_EVENTS = 10\n\tvar DistLambda = function() { return ( exponential( { a: 1 } ) )  }\n\tvar DistMu = function(lambda_0) {\n\t\tvar epsilon = uniform( { a:0.0, b:1.0 } )\n\t\t return ( epsilon * lambda_0) \n\t}\n\tvar DistZ = function() { return 0 }\n\tvar lambda_0 = DistLambda()\n\tvar z_0 = DistZ()\n\tvar lambdaFun_0 = function(t) { return ( lambda_0*Math.exp(z_0*(tree.age - t) ) ) }\n\tvar mu_0 = DistMu(lambda_0)\n\tvar eta = EXPECTED_NUM_EVENTS / tree.age \n\tvar rho = 1\n\t\n\tvar ret = simBAMM( tree, lambdaFun_0, z_0, mu_0, eta, DistLambda, DistZ, DistMu, rho )\n\treturn (ret)\n}\nvar dist = Infer({method: 'SMC', particles: particles, model: model})\ndist.normalizationConstant",
    "command": "npm run wppl verification/bamm/bamm-grid2-lsbds/bamm-grid2-lsbds-10.wppl 10",
    "output": "-154.46370213881724\n-154.6858392796849\n-154.5758339664095\n-154.49532798164557\n-154.26113257050446\n-154.49205206984544\n-154.91618351823382\n-154.46233000390893\n-154.6136861749431\n-154.376153355318\n"
  }
]